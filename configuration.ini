# This file is the configuration of IOHexperiments.
# With this file, the IOHprofiler_experimenter class can configure suite and csv_logger 
# automatically. 

# The configuration consist of three parts: [suite], [observer], and [triggers].
# It is highly recommended not to add or delete any sentences in the file.
# Modify the value of keys to suit expected experiments, otherwise keep them as default values.

# Suite is a collection of problems.
# Currently, ONLY `PBO` suite is avaiable. If you are using your own created suite, please
# make sure that you register the suite and set the suite_name by the registered name.
#
# `problem_id` presents id of problems of the suite. For `PBO`, please visit 
# https://github.com/IOHprofiler/IOHexperimenter/blob/NewStructure/src/Suites/IOHprofiler_PBO_suite.hpp
# for the map of id and problems.
#
# `instance_id` presents id of instances. instances decide the transformer operations on
# problems. For `PBO`:
# `1` : no transformer operations on the problem.
# `2-50` :  XOR and SHIFT operations are applied on the problem.
# `51-100`: SIGMA and SHIFT operations are applied on the problem.
# The format of `instances_id` can be `1,2,3,4`, using comma `,` to separate instances' id,
# or be `1-100`, using an en-dash `-` to present the range of instances' id. 
# please visit https://iohprofiler.github.io/Benchmark/Transformation/ for the functionality
# of instances.
#
# `dimension` presents dimensions of problems. It is not supported to set sepecfic dimensions
# for each problem, which means all selected problems will be tested with the same dimensions.
# The format of `dimensions` is as `500,1000,1500`. Noth that the dimension should be less than
# 20000.
[suite]
suite_name = BBOB
problem_id = 1-24
instance_id = 1
dimension = 10
# Logger is about the setting of output files.
# `result_folder` is the name of folder where stores output files. If the folder doesnot exist,
# a new folder will be created in current path.
#
# `algorithms_name` and `algorithm_info` are additional information of algorithms. It will be used
# when generating the `.info` files.
#

[logger]
output_directory = ./results
result_folder = Hybrid
algorithm_name = Hybrid
algorithm_info = A_Hyrbid_PSO_DE_Algorithm

# Observers are parameters for setting different output files. Values of triggers will effect the output
# of corresponding output files.
#
# `complete_triggers` is the switch of `.cdat` files, which will store evaluations of all iterations.
# Set `complete_triggers` as `TRUE` or `true` if you want to output `.cdat` files.
#
# `update_triggers` is the switch of `.dat` files, which will store evaluations as the best found
# solution is updated. Set `update_triggers` as `TRUE` or `true` if you want to output `.dat` files.
#
# `number_interval_triggers` configures the `.idat` files. `.idat` files log evaluations in a fixed 
# frequecny. number_target_triggers sets the value of the frequecny. If you do not want to generate
# `.idat` files, set `number_target_triggers` as 0.
#
# both `number_target_triggers` and `base_evaluation_triggers` effect `.tdat`. 
#
# `number_target_triggers` is a value defines the number of evaluations to be logged between 10^i
# and 10^(i+1). If you do not want to generate `.tdat` files, set both `number_target_triggers` 
# and `base_evaluation_triggers` as 0.
#
# `base_evaluation_triggers` defines the base evaluations used to produce an additional
# evaluation-based logging. For example, if `base_evaluation_triggers` = `1,2,5`, the logger will be 
# triggered by evaluations dim*1, dim*2, dim*5, 10*dim*1, 10*dim*2, 10*dim*5, 100*dim*1, 100*dim*2, 
# 100*dim*5, ... . If you do not want to generate `.tdat` files, set `base_evaluation_triggers` as ``.

[observer]
complete_triggers = false
update_triggers = true
number_interval_triggers = 0
number_target_triggers = 0
base_evaluation_triggers = 1
